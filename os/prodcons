
class Inventory
{
staticintqoh=500;
staticintreq=0;
static public synchronized void request(int order)

     {

if(order<=qoh)

        {

System.out.println("quantity ordered:"+order);
qoh-=order;
req+=order;
System.out.println("quantity on hand:"+qoh);
System.out.println("Total quantity taken away by way of order:"+req);

        }

else

        {

System.out.println("ordered quantity more than quantity on hand");

        }

     }

public static void main(String args[])

     {        
newTestThread();
try

             {
for(int p=3;p>0;p--)
                      {

System.out.println("-----------");
System.out.println("main thread:"+p);
System.out.println("-----------");
Thread.sleep(1000);

                      }
               }

catch(InterruptedException e)

               {
               }

System.out.println("Exiting main thread...");

             }

    }

classTestThread extends Thread

{

TestThread()

      {
super("Test Thread");
System.out.println("child Thread:"+this);
start();

      }

public void run()

       {

for(int i=5;i>0;i--)
               {

try

                      {

sleep(100);
                      }

catch(InterruptedException e)

                      {

System.out.println("i="+i);

                      }

Inventory.request((int)(Math.random()*100));

               }

        }

}
